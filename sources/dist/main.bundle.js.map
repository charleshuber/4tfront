{"version":3,"file":"main.bundle.js","sources":["webpack:///./src/app/environment.ts","webpack:///delegated ./node_modules/@angularclass/hmr/dist/index.js from dll-reference vendor_lib","webpack:///delegated ./node_modules/@angular/http/@angular/http.es5.js from dll-reference vendor_lib","webpack:///delegated ./node_modules/rxjs/Observable.js from dll-reference vendor_lib","webpack:///./src/app/home/index.ts","webpack:///./src/app/no-content/index.ts","webpack:///./src/app/rest/labels/label.service.ts","webpack:///external \"vendor_lib\"","webpack:///delegated ./node_modules/rxjs/add/observable/of.js from dll-reference vendor_lib","webpack:///delegated ./node_modules/@angular/platform-browser/@angular/platform-browser.es5.js from dll-reference vendor_lib","webpack:///./src/app/index.ts","webpack:///delegated ./node_modules/@angular/core/@angular/core.es5.js from dll-reference vendor_lib","webpack:///delegated ./node_modules/@angular/platform-browser-dynamic/@angular/platform-browser-dynamic.es5.js from dll-reference vendor_lib","webpack:///delegated ./node_modules/rxjs/add/operator/catch.js from dll-reference vendor_lib","webpack:///delegated ./node_modules/rxjs/add/operator/map.js from dll-reference vendor_lib","webpack:///./src/app/rest/auth/authentication.service.ts","webpack:///delegated ./node_modules/@angular/forms/@angular/forms.es5.js from dll-reference vendor_lib","webpack:///delegated ./node_modules/@angular/router/@angular/router.es5.js from dll-reference vendor_lib","webpack:///delegated ./node_modules/rxjs/add/observable/throw.js from dll-reference vendor_lib","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.resolver.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/title/index.ts","webpack:///./src/app/home/title/title.service.ts","webpack:///./src/app/home/x-large/index.ts","webpack:///./src/app/home/x-large/x-large.directive.ts","webpack:///./src/app/no-content/no-content.component.ts","webpack:///./src/main.browser.ts","webpack:///./src/styles/styles.scss","webpack:///./src/app/app.component.css","webpack:///./src/app/home/home.component.css","webpack:///./src/styles/headings.css","webpack:///./src/app/home/home.component.html","webpack:///./src/styles/styles.scss?b992","webpack:///./src/styles/headings.css?f235","webpack:///./src/app/app.component.css?e3a3","webpack:///./src/app/home/home.component.css?5810","webpack:///./src/app/app.service.ts"],"sourcesContent":["// Angular 2\nimport {\n  enableDebugTools,\n  disableDebugTools\n} from '@angular/platform-browser';\nimport {\n  ApplicationRef,\n  enableProdMode\n} from '@angular/core';\n// Environment Providers\nlet PROVIDERS: any[] = [\n  // common env directives\n];\n\n// Angular debug tools in the dev console\n// https://github.com/angular/angular/blob/86405345b781a9dc2438c0fbe3e9409245647019/TOOLS_JS.md\nlet _decorateModuleRef = <T>(value: T): T => { return value; };\n\nif ('production' === ENV) {\n  enableProdMode();\n\n  // Production\n  _decorateModuleRef = (modRef: any) => {\n    disableDebugTools();\n\n    return modRef;\n  };\n\n  PROVIDERS = [\n    ...PROVIDERS,\n    // custom providers in production\n  ];\n\n} else {\n\n  _decorateModuleRef = (modRef: any) => {\n    const appRef = modRef.injector.get(ApplicationRef);\n    const cmpRef = appRef.components[0];\n\n    let _ng = (<any> window).ng;\n    enableDebugTools(cmpRef);\n    (<any> window).ng.probe = _ng.probe;\n    (<any> window).ng.coreTokens = _ng.coreTokens;\n    return modRef;\n  };\n\n  // Development\n  PROVIDERS = [\n    ...PROVIDERS,\n    // custom providers in development\n  ];\n\n}\n\nexport const decorateModuleRef = _decorateModuleRef;\n\nexport const ENV_PROVIDERS = [\n  ...PROVIDERS\n];\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/environment.ts","module.exports = (__webpack_require__(2))(215)\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/@angularclass/hmr/dist/index.js from dll-reference vendor_lib\n// module id = 11\n// module chunks = 1","module.exports = (__webpack_require__(2))(212)\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/@angular/http/@angular/http.es5.js from dll-reference vendor_lib\n// module id = 12\n// module chunks = 1","module.exports = (__webpack_require__(2))(0)\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/rxjs/Observable.js from dll-reference vendor_lib\n// module id = 13\n// module chunks = 1","export * from './home.component';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/home/index.ts","export * from './no-content.component';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/no-content/index.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport abstract class LabelService {\n\n    private lang = 'fr';\n    private labels = {\n        \"authentication.popup.label.email\" : {\n            \"en\" : \"email\",\n            \"fr\" : \"courriel\"    \n        },\n        \"authentication.popup.label.password\" : {\n            \"en\" : \"password\",\n            \"fr\" : \"mot de passe\"    \n        },\n        \"authentication.popup.label.connection\" : {\n            \"en\" : \"connect\",\n            \"fr\" : \"se connecter\"    \n        }    \n    }\n\n    constructor() { }\n    \n    public gb(key: string) {\n        if(this.labels[key]){\n            return this.labels[key][this.lang]; \n        }\n        return \"\";    \n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/rest/labels/label.service.ts","module.exports = vendor_lib;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor_lib\"\n// module id = 2\n// module chunks = 1","module.exports = (__webpack_require__(2))(451)\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/rxjs/add/observable/of.js from dll-reference vendor_lib\n// module id = 212\n// module chunks = 1","module.exports = (__webpack_require__(2))(63)\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/@angular/platform-browser/@angular/platform-browser.es5.js from dll-reference vendor_lib\n// module id = 24\n// module chunks = 1","// App\nexport * from './app.module';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/index.ts","module.exports = (__webpack_require__(2))(43)\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/@angular/core/@angular/core.es5.js from dll-reference vendor_lib\n// module id = 3\n// module chunks = 1","module.exports = (__webpack_require__(2))(213)\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/@angular/platform-browser-dynamic/@angular/platform-browser-dynamic.es5.js from dll-reference vendor_lib\n// module id = 44\n// module chunks = 1","module.exports = (__webpack_require__(2))(467)\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/rxjs/add/operator/catch.js from dll-reference vendor_lib\n// module id = 47\n// module chunks = 1","module.exports = (__webpack_require__(2))(500)\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/rxjs/add/operator/map.js from dll-reference vendor_lib\n// module id = 48\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport { Resource } from 'app/rest/resources/resource';\nimport { LabelService } from '../labels/label.service';\n\n@Injectable()\nexport abstract class AuthenticationService {\n    \n    private authenticated = false;\n    private username = null;\n    private password = null;\n\n    constructor(protected labels: LabelService) { }\n\n    public authenticate(url: string) {\n        let service = this;\n        return Observable.create(obs => {\n            if (!service.authenticated) {\n                service.popup(url).subscribe(\n                    (x) => {\n                        obs._next(service.buildBasicAuthorization());\n                    },\n                    (e) => obs._error(e),\n                    () => obs._complete()\n                );\n            } else {\n                obs._next(service.buildBasicAuthorization());\n            }\n        });\n    }\n    \n    public buildBasicAuthorization(){\n        return 'Basic ' + btoa(this.username + ':' + this.password);\n    }\n    \n    private clearPopup(){\n        while(document.querySelector('#authentication-container')){\n            let container = document.querySelector('#authentication-container');\n            container.parentElement.removeChild(container);\n        }\n    }\n\n    public popup(url: string) {\n        \n        this.clearPopup();\n        \n        let service = this;\n        \n        let container = document.createElement('div');\n        container.setAttribute('id', 'authentication-container');\n        document.querySelector('body').appendChild(container);\n        \n        let form = document.createElement('form');\n        container.appendChild(form);\n        \n        let fieldset1 = document.createElement('fieldset');\n        form.appendChild(fieldset1);\n        \n        let mailLabel = document.createElement('label');\n        fieldset1.appendChild(mailLabel);\n        mailLabel.setAttribute('for','email');\n        mailLabel.innerHTML = this.labels.gb('authentication.popup.label.email');\n        \n        let mail = document.createElement('input');\n        mail.setAttribute('type','email');\n        mail.setAttribute('id','email');\n        fieldset1.appendChild(mail);\n        mail.focus();\n  \n        let fieldset2 = document.createElement('fieldset');\n        form.appendChild(fieldset2);\n        \n        let passwordLabel = document.createElement('label');\n        fieldset2.appendChild(passwordLabel);\n        passwordLabel.setAttribute('for','password');\n        passwordLabel.innerHTML = this.labels.gb('authentication.popup.label.password');\n        \n        let password = document.createElement('input');\n        password.setAttribute('type','password');\n        password.setAttribute('id','password');\n        fieldset2.appendChild(password);\n        \n        let fieldset3 = document.createElement('fieldset');\n        form.appendChild(fieldset3);\n        let button = document.createElement('input');\n        button.setAttribute('type','button');\n        button.value = this.labels.gb('authentication.popup.label.connection');\n        fieldset3.appendChild(button);\n        \n        mail.onkeydown = password.onkeydown = (e) => {\n            if (e.keyCode == 13) {\n                button.click();\n            }\n                \n        }\n        return Observable.create(obs => {\n               button.onclick = (evt) => {\n               if(mail.value.length > 0 && password.value.length > 0){\n                   service.username = mail.value;\n                   service.password = password.value;\n                   let req = new XMLHttpRequest();\n                   req.onreadystatechange = function(event) {\n                        // XMLHttpRequest.DONE === 4\n                        if (this.readyState === XMLHttpRequest.DONE) {\n                            if (this.status === 200) {\n                                service.authenticated = true;\n                                service.clearPopup();\n                                obs._next();\n                            } else if (this.status === 401){\n                                mail.value = '';\n                                password.value = '';\n                                service.username = '';\n                                service.password = '';\n                            } else {\n                                alert('Accès impossible ! Un problème a eu lieu durant l\\'authenthification');\n                                obs._next();\n                                obs._complete();\n                            }\n                        }\n                    };\n                    // we make a synchronous call\n                    req.open('GET', url, true);\n                    req.setRequestHeader(\"Authorization\", service.buildBasicAuthorization());\n                    req.withCredentials = true;\n                    req.send(null);\n               } \n            };     \n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/rest/auth/authentication.service.ts","module.exports = (__webpack_require__(2))(211)\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/@angular/forms/@angular/forms.es5.js from dll-reference vendor_lib\n// module id = 50\n// module chunks = 1","module.exports = (__webpack_require__(2))(214)\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/@angular/router/@angular/router.es5.js from dll-reference vendor_lib\n// module id = 51\n// module chunks = 1","module.exports = (__webpack_require__(2))(456)\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/rxjs/add/observable/throw.js from dll-reference vendor_lib\n// module id = 52\n// module chunks = 1","/*\n * Angular 2 decorators and services\n */\nimport {\n  Component,\n  OnInit,\n  ViewEncapsulation\n} from '@angular/core';\nimport { AppState } from './app.service';\n\n/*\n * App Component\n * Top Level Component\n */\n@Component({\n  selector: 'app',\n  encapsulation: ViewEncapsulation.None,\n  styles: [\n    require('./app.component.css')\n  ],\n  template: `\n    <nav>\n      <a [routerLink]=\" ['./'] \"\n        routerLinkActive=\"active\" [routerLinkActiveOptions]= \"{exact: true}\">\n        Accueil\n      </a>\n      <a [routerLink]=\" ['./user'] \"\n             routerLinkActive=\"active\" [routerLinkActiveOptions]= \"{exact: true}\">\n      Utilisateurs\n      </a>\n    </nav>\n\n    <main>\n      <router-outlet></router-outlet>\n    </main>\n\n    <footer style=\"margin-top:50px\">\n      <span>WebPack Angular 2 Starter by <a [href]=\"url\">@AngularClass</a></span>\n      <div>\n        <a [href]=\"url\">\n          <img [src]=\"angularclassLogo\" width=\"25%\">\n        </a>\n      </div>\n    </footer>\n  `\n})\nexport class AppComponent implements OnInit {\n  public angularclassLogo = 'assets/img/angularclass-avatar.png';\n  public name = 'Angular 2 Webpack Starter';\n  public url = 'https://twitter.com/AngularClass';\n\n  constructor(\n    public appState: AppState\n  ) {}\n\n  public ngOnInit() {\n    console.log('Initial App State', this.appState.state);\n  }\n\n}\n\n/*\n * Please review the https://github.com/AngularClass/angular2-examples/ repo for\n * more angular app examples that you may copy/paste\n * (The examples may not be updated as quickly. Please open an issue on github for us to update it)\n * For help or questions please contact us at @AngularClass on twitter\n * or our chat on Slack at https://AngularClass.com/slack-join\n */\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport {\n  NgModule,\n  ApplicationRef\n} from '@angular/core';\nimport {\n  removeNgStyles,\n  createNewHosts,\n  createInputTransfer\n} from '@angularclass/hmr';\nimport {\n  RouterModule,\n  PreloadAllModules\n} from '@angular/router';\n\n/*\n * Platform and Environment providers/directives/pipes\n */\nimport { ENV_PROVIDERS } from './environment';\nimport { ROUTES } from './app.routes';\n// App is our top level component\nimport { AppComponent } from './app.component';\nimport { APP_RESOLVER_PROVIDERS } from './app.resolver';\nimport { AppState, InternalStateType } from './app.service';\nimport { HomeComponent } from './home';\nimport { NoContentComponent } from './no-content';\nimport { XLargeDirective } from './home/x-large';\nimport { LabelService } from 'app/rest/labels/label.service';\nimport { AuthenticationService } from 'app/rest/auth/authentication.service';\n\nimport '../styles/styles.scss';\nimport '../styles/headings.css';\n\n// Application wide providers\nconst APP_PROVIDERS = [\n  ...APP_RESOLVER_PROVIDERS,\n  AppState,\n  LabelService,\n  AuthenticationService\n];\n\ntype StoreType = {\n  state: InternalStateType,\n  restoreInputValues: () => void,\n  disposeOldHosts: () => void\n};\n\n/**\n * `AppModule` is the main entry point into Angular2's bootstraping process\n */\n@NgModule({\n  bootstrap: [ AppComponent ],\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NoContentComponent,\n    XLargeDirective\n  ],\n  imports: [ // import Angular's modules\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(ROUTES, { useHash: true, preloadingStrategy: PreloadAllModules })\n  ],\n  providers: [ // expose our Services and Providers into Angular's dependency injection\n    ENV_PROVIDERS,\n    APP_PROVIDERS\n  ]\n})\nexport class AppModule {\n\n  constructor(\n    public appRef: ApplicationRef,\n    public appState: AppState\n  ) {}\n\n  public hmrOnInit(store: StoreType) {\n    if (!store || !store.state) {\n      return;\n    }\n    console.log('HMR store', JSON.stringify(store, null, 2));\n    // set state\n    this.appState._state = store.state;\n    // set input values\n    if ('restoreInputValues' in store) {\n      let restoreInputValues = store.restoreInputValues;\n      setTimeout(restoreInputValues);\n    }\n\n    this.appRef.tick();\n    delete store.state;\n    delete store.restoreInputValues;\n  }\n\n  public hmrOnDestroy(store: StoreType) {\n    const cmpLocation = this.appRef.components.map((cmp) => cmp.location.nativeElement);\n    // save state\n    const state = this.appState._state;\n    store.state = state;\n    // recreate root elements\n    store.disposeOldHosts = createNewHosts(cmpLocation);\n    // save input values\n    store.restoreInputValues  = createInputTransfer();\n    // remove styles\n    removeNgStyles();\n  }\n\n  public hmrAfterDestroy(store: StoreType) {\n    // display new elements\n    store.disposeOldHosts();\n    delete store.disposeOldHosts;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/app.module.ts","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\n\n@Injectable()\nexport class DataResolver implements Resolve<any> {\n  public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return Observable.of({ res: 'I am data'});\n  }\n}\n\n// an array of services to resolve routes with data\nexport const APP_RESOLVER_PROVIDERS = [\n  DataResolver\n];\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/app.resolver.ts","import { Routes } from '@angular/router';\nimport { HomeComponent } from './home';\nimport { AboutComponent } from './about';\nimport { NoContentComponent } from './no-content';\n\nimport { DataResolver } from './app.resolver';\n\nexport const ROUTES: Routes = [\n  { path: '',      component: HomeComponent },\n  { path: 'user', loadChildren: './+user#UserModule'},\n  { path: '**',    component: NoContentComponent },\n];\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/app.routes.ts","import {\n  Component,\n  OnInit\n} from '@angular/core';\n\nimport { AppState } from '../app.service';\nimport { Title } from './title';\nimport { XLargeDirective } from './x-large';\n\n@Component({\n  // The selector is what angular internally uses\n  // for `document.querySelectorAll(selector)` in our index.html\n  // where, in this case, selector is the string 'home'\n  selector: 'home',  // <home></home>\n  // We need to tell Angular's Dependency Injection which providers are in our app.\n  providers: [\n    Title\n  ],\n  // Our list of styles in our component. We may add more to compose many styles together\n  styles: [ require('./home.component.css') ],\n  // Every Angular template is first compiled by the browser before Angular runs it's compiler\n  template: require('./home.component.html')\n})\nexport class HomeComponent implements OnInit {\n  // Set our default values\n  public localState = { value: '' };\n  // TypeScript public modifiers\n  constructor(\n    public appState: AppState,\n    public title: Title\n  ) {}\n\n  public ngOnInit() {\n    console.log('hello `Home` component');\n    // this.title.getData().subscribe(data => this.data = data);\n  }\n\n  public submitState(value: string) {\n    console.log('submitState', value);\n    this.appState.set('value', value);\n    this.localState.value = '';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/home/home.component.ts","export * from './title.service';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/home/title/index.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Injectable()\nexport class Title {\n\n  public value = 'Angular 2';\n\n  constructor(\n    public http: Http\n  ) {}\n\n  public getData() {\n    console.log('Title#getData(): Get Data');\n    // return this.http.get('/assets/data.json')\n    // .map(res => res.json());\n    return {\n      value: 'AngularClass'\n    };\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/home/title/title.service.ts","export * from './x-large.directive';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/home/x-large/index.ts","import {\n  Component,\n  Directive,\n  ElementRef,\n  Renderer\n} from '@angular/core';\n/*\n * Directive\n * XLarge is a simple directive to show how one is made\n */\n@Directive({\n  selector: '[x-large]' // using [ ] means selecting attributes\n})\nexport class XLargeDirective {\n  constructor(\n    public element: ElementRef,\n    public renderer: Renderer\n  ) {\n    // simple DOM manipulation to set font size to x-large\n    // `nativeElement` is the direct reference to the DOM element\n    // element.nativeElement.style.fontSize = 'x-large';\n\n    // for server/webworker support use the renderer\n    renderer.setElementStyle(element.nativeElement, 'fontSize', 'x-large');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/home/x-large/x-large.directive.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'no-content',\n  template: `\n    <div>\n      <h1>404: page missing</h1>\n    </div>\n  `\n})\nexport class NoContentComponent {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/no-content/no-content.component.ts","/*\n * Angular bootstraping\n */\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { decorateModuleRef } from './app/environment';\nimport { bootloader } from '@angularclass/hmr';\n/*\n * App Module\n * our top level module that holds all of our components\n */\nimport { AppModule } from './app';\n\n/*\n * Bootstrap our Angular app with a top level NgModule\n */\nexport function main(): Promise<any> {\n  return platformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .then(decorateModuleRef)\n    .catch((err) => console.error(err));\n}\n\n// needed for hmr\n// in prod this is replace for document ready\nbootloader(main);\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/main.browser.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"/* this file will be extracted to main dist folder and is imported in index.html */\\n/* This file is for setting global styles  */\\nnav {\\n  margin-top: 16px; }\\n\\nnav a {\\n  background-color: #00838F;\\n  color: white;\\n  padding: 8px 16px;\\n  margin: 8px;\\n  vertical-align: middle;\\n  line-height: 1.25;\\n  text-align: center;\\n  text-decoration: none;\\n  border-radius: 4px; }\\n\\n#authentication-container {\\n  position: absolute;\\n  top: 0px;\\n  left: 0px;\\n  z-index: 1000;\\n  width: 100%;\\n  height: 100%;\\n  background-color: rgba(0, 0, 0, 0.5); }\\n\\n#authentication-container form {\\n  display: block;\\n  position: relative;\\n  top: 40%;\\n  left: 40%;\\n  width: 20%;\\n  background-color: white;\\n  padding: 10px; }\\n\\n#authentication-container form fieldset {\\n  margin: 10px 0px; }\\n\\n#authentication-container form label {\\n  display: block; }\\n\\n#authentication-container form input:not([type=button]) {\\n  width: 100%;\\n  border: 1px solid black; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/sass-loader/lib/loader.js!./src/styles/styles.scss\n// module id = 65\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"html, body {\\n  height: 100%;\\n  font-family: Arial, Helvetica, sans-serif;\\n  padding: 20px;\\n}\\n\\na.active {\\n  background-color: gray;\\n}\\n\\n.errorMsg {\\n\\tcolor:red;\\n\\tfont-size:0.8em;\\n\\tfont-weight:bold;\\n}\\n\\ninput {\\n\\tbackground-color: white;\\n}\\n\\ninput.has-success {\\n\\t-webkit-transition: background-color 1.5s ease-in-out;\\n\\ttransition: background-color 1.5s ease-in-out;\\n\\tbackground-color: #73d216;\\n}\\n\\ninput.has-error {\\n\\t-webkit-transition: background-color 1.5s ease-in-out;\\n\\ttransition: background-color 1.5s ease-in-out;\\n\\tbackground-color: #d21030;\\n}\\n\\n#user-table div.row {\\n\\tmargin-top: 5px;\\n\\tmargin-bottom: 5px;\\n}\\n\\n#user-table-header {\\n\\tmargin-top: 40px;\\n\\tmargin-bottom: 40px;\\n\\tfont-weight: bold;\\n}\\n\\n#user-table-footer {\\n\\tmargin-top: 40px;\\n\\tmargin-bottom: 40px;\\n}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/app/app.component.css\n// module id = 66\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"/*styles for home content only*/\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/app/home/home.component.css\n// module id = 67\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"h1 {\\n  color: #00BCD4;\\n}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/styles/headings.css\n// module id = 68\n// module chunks = 1","module.exports = \"<div>\\n  <h1>Projet SMB215 (2017) Charles Huber</h1>\\n\\n  <div>\\n    <h4>Réalisation d’une application répartie sous Docker</h4>\\n    <br> \\n    <p>Pour le moment, seulement une gestion basique des utilisateurs a été implémentée...</p>\\n    \\n    <br> \\n    <p>L'authentification, la gestion des droits et le protocole https seront mis en place ultérieurement !</p>\\n    \\n    <br> \\n    <div>\\t\\n    \\tLe fonctionnement de l'architecture docker est validée par l'implémentation du CRUD (Create Read Update Delete) \\n    \\tsur la ressource \\\"utilisateur\\\". Ceci sur l'ensemble de la chaine applicative respectant le \\\"design-pattern\\\" MVC:\\n    \\t<ul>\\n    \\t<li><em style=\\\"font-weight:bold\\\">M</em>odèle : Conteneur Mysql</li>\\n    \\t<li><em style=\\\"font-weight:bold\\\">V</em>ue : Conteneur \\\"4tfront\\\" hébergeant le serveur Apache et le code Angular2 du client</li>\\n    \\t<li><em style=\\\"font-weight:bold\\\">C</em>ontroleur : Conteneur \\\"4trest\\\" hébergeant le tomcat qui expose les services REST</li>\\n    \\t</ul>\\t\\n   \\t</div>\\n   \\t\\n   \\t<p>\\n   \\t\\tCe projet a vocation a mettre en place les briques de base de mon projet de mémoire. Il s'agit d'une application de gestion des congés et du temps de travail nommée \\\"tatoutontan\\\".\\n   \\t\\t(tttt => 4t)\\n   \\t</p>\\n  </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = 69\n// module chunks = 1","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./styles.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./styles.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./styles.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/styles.scss\n// module id = 71\n// module chunks = 1","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!./headings.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./headings.css\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./headings.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/headings.css\n// module id = 72\n// module chunks = 1","\n        var result = require(\"!!../../node_modules/css-loader/index.js!./app.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 73\n// module chunks = 1","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!./home.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = 74\n// module chunks = 1","import { Injectable } from '@angular/core';\n\nexport type InternalStateType = {\n  [key: string]: any\n};\n\n@Injectable()\nexport class AppState {\n\n  public _state: InternalStateType = { };\n\n  // already return a clone of the current state\n  public get state() {\n    return this._state = this._clone(this._state);\n  }\n  // never allow mutation\n  public set state(value) {\n    throw new Error('do not mutate the `.state` directly');\n  }\n\n  public get(prop?: any) {\n    // use our state getter for the clone\n    const state = this.state;\n    return state.hasOwnProperty(prop) ? state[prop] : state;\n  }\n\n  public set(prop: string, value: any) {\n    // internally mutate our state\n    return this._state[prop] = value;\n  }\n\n  private _clone(object: InternalStateType) {\n    // simple object clone\n    return JSON.parse(JSON.stringify( object ));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/app.service.ts"],"mappings":";A;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAIA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAKA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AAEA;AAEA;;;;;;;;ACxDA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;;ACAA;AAAA;AAAA;;;;;;;;;ACAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAGA;AAkBA;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AA1BA;AADA;;AACA;AAAA;;;;;;;;ACHA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;;ACAA;AAAA;AAAA;AACA;;;;;;;;ACDA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAMA;AAAA;AAJA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AA3HA;AADA;AAOA;AANA;AAAA;;;;;;;;ACTA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;;;;;;;ACAA;;AAEA;AACA;AAKA;AAEA;;;AAGA;AAiCA;AAKA;AACA;AALA;AACA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AAAA;AAbA;AAhCA;AACA;AACA;AACA;AACA;AACA;AACA;AAyBA;AAOA;AANA;AAAA;AAeA;;;;;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AAIA;AAKA;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAQA;;AAEA;AAoBA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AA5CA;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAJA;AAAA;;;;;;;;;;;;;;;;;;ACtEA;AACA;AACA;AAGA;AAAA;AAIA;AAHA;AACA;AACA;AACA;AAAA;AAJA;AADA;AACA;AAAA;AAMA;AACA;AACA;AACA;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAEA;AAIA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACXA;AAKA;AACA;AAiBA;AAGA;AACA;AACA;AACA;AALA;AACA;AAKA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAnBA;AAdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AANA;AAAA;;;;;;;;;ACvBA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AACA;AAGA;AAIA;AACA;AAHA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAjBA;AADA;AAMA;AALA;AAAA;;;;;;;;;ACJA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAMA;;;AAGA;AAIA;AACA;AAIA;AACA;AACA;AALA;AACA;AAMA;AACA;AACA;AACA;AAAA;AAZA;AAHA;AACA;AACA;AAGA;AACA;AAHA;AAAA;;;;;;;;;;;;;ACbA;AAUA;AAAA;AAEA;AAAA;AAAA;AAFA;AARA;AACA;AACA;AAKA;AACA;AAAA;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAOA;AADA;AAGA;AA0BA;AAvBA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAJA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AA5BA;AADA;AACA;AAAA;;;;;A","sourceRoot":""}