{"version":3,"file":"0.chunk.js","sources":["webpack:///./src/app/+periods/index.ts","webpack:///delegated ./node_modules/@angular/common/@angular/common.es5.js from dll-reference vendor_lib","webpack:///./src/app/rest/resources/resource.service.ts","webpack:///./src/app/rest/resources/cppr/compiledperiod.service.ts","webpack:///./src/app/rest/resources/timeline/timeline.service.ts","webpack:///./src/app/timegrid/timeunit.ts","webpack:///./src/assets/img/back.svg","webpack:///./src/assets/img/delete.svg","webpack:///delegated ./node_modules/rxjs/add/operator/concat.js from dll-reference vendor_lib","webpack:///./src/app/+periods/period.component.ts","webpack:///./src/app/+periods/periods.component.ts","webpack:///./src/app/+timeline/timeline.component.ts","webpack:///./src/app/rest/resources/resource.ts","webpack:///./src/app/rest/resources/timeline/timeline.ts","webpack:///./src/app/+periods/periods.module.ts","webpack:///./src/app/+periods/periods.routes.ts","webpack:///./src/app/rest/resources/cppr/compiledperiod.ts","webpack:///./src/app/timegrid/dateutils.ts","webpack:///./src/app/timegrid/gridbuilder.ts","webpack:///./src/app/timegrid/timegrid.component.ts","webpack:///./src/app/timegrid/timerange.ts","webpack:///./src/app/+periods/period.scss","webpack:///./src/app/+periods/periods.scss","webpack:///./src/app/+timeline/timeline.scss","webpack:///./src/app/timegrid/timegrid.scss","webpack:///./src/assets/img/add-timeline.svg","webpack:///./src/assets/img/add.svg","webpack:///./src/assets/img/pen.svg","webpack:///./src/app/+periods/period.html","webpack:///./src/app/+periods/periods.html","webpack:///./src/app/+timeline/timeline.html","webpack:///./src/app/timegrid/timegrid.html","webpack:///./src/app/+periods/period.scss?e5e6","webpack:///./src/app/+periods/periods.scss?08fe","webpack:///./src/app/+timeline/timeline.scss?2e56","webpack:///./src/app/timegrid/timegrid.scss?e469"],"sourcesContent":["export { PeriodsModule } from './periods.module';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/+periods/index.ts","module.exports = (__webpack_require__(2))(74)\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/@angular/common/@angular/common.es5.js from dll-reference vendor_lib\n// module id = 217\n// module chunks = 0 1","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/concat';\nimport { Resource } from './resource';\nimport { AuthenticationService } from '../auth/authentication.service';\n\n@Injectable()\nexport abstract class ResourceService<R extends Resource> {\n\n    private domain = 'http://localhost:8080/';\n    //private domain = '/';\n    private servicesUrl = this.domain + '4TRest/services/';\n    private resourcesUrl = this.servicesUrl + 'resources';  // URL to web API\n\n    constructor(protected http: Http, protected authService: AuthenticationService) { }\n\n    public getAll(): Observable<R[] | any> {\n        return this.authenticate('get', this.getResourceUrl() + '/all', null, null);\n    }\n\n    public create(resource: R): Observable<R | any> {\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers });\n        return this.authenticate('post', this.getResourceUrl(), resource, options);\n    }\n\n    public read(id: number): Observable<R | any> {\n        return this.authenticate('get', this.getResourceUrl() + '/' + id, null, null);\n    }\n\n    public update(resource: R): Observable<R | any> {\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers });\n        return this.authenticate('put', this.getResourceUrl(), resource, options);\n    }\n\n    public delete(id: number): Observable<R[] | any> {\n        let headers = new Headers();\n        let options = new RequestOptions({ headers });\n        return this.authenticate('delete', this.getResourceUrl() + '/' + id, null, null);\n    }\n\n    protected authenticate(method, url, resource, options) {\n        let service = this;\n        let authentication = this.authService.authenticate(this.servicesUrl);\n        return Observable.create(obs => {\n            authentication.subscribe(function(authorization) {\n                if (!options) {\n                    options = options = new RequestOptions();\n                }\n                if (!options.headers) {\n                    options.headers = new Headers();\n                }\n                options.headers.append('Authorization', authorization);\n\n                let httpRequest = null;\n                if (resource) {\n                    httpRequest = service.http[method](url, resource, options)\n                        .map(service.extractData)\n                        .catch(service.handleError);\n                } else {\n                    httpRequest = service.http[method](url, options)\n                      .map(service.extractData)\n                      .catch(service.handleError);\n                }\n                httpRequest.subscribe(\n                    data => {\n                        obs._next(data);\n                    },\n                    e => obs._error(e),\n                    () => obs._complete());\n            },\n            e => obs._error(e),\n            () => obs._complete());\n        });\n    }\n\n    protected getRootResourceUrl() {\n        return this.resourcesUrl;\n    }\n\n    protected abstract getResourceUrl();\n\n    protected extractData(res: Response) {\n        let body = res.json();\n        return body || {};\n    }\n\n    protected handleError(error: Response | any) {\n        // In a real world app, you might use a remote logging infrastructure\n        let errMsg: string;\n        if (error instanceof Response) {\n            if (error.headers.has('validation-failed')) {\n                return Observable.throw(error.json());\n            }\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/rest/resources/resource.service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { ResourceService } from '../resource.service';\nimport { CompiledPeriod } from './compiledperiod';\n\n@Injectable()\nexport class CompiledPeriodService extends ResourceService<CompiledPeriod> {\n\n  public getAllOfTimeline(tlid: number): Observable<CompiledPeriod[] | any> {\n    return this.authenticate('get', this.getResourceUrl() + '/timeline/' + tlid, null, null);\n  }\n\n  protected getResourceUrl() {\n    return this.getRootResourceUrl() + '/compiledPeriod';\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/rest/resources/cppr/compiledperiod.service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { ResourceService } from '../resource.service';\nimport { Timeline } from './timeline';\n\n@Injectable()\nexport class TimelineService extends ResourceService<Timeline> {\n\n    public addCPPR(tlId: number, cpprId: number): Observable<any> {\n        return this.authenticate('get', this.getResourceUrl() + '/' + tlId + '/add/compiledPeriod/' + cpprId, null, null);\n    }\n\n    public removeCPPR(tlId: number, cpprId: number): Observable<any> {\n        return this.authenticate('get', this.getResourceUrl() + '/' + tlId + '/remove/compiledPeriod/' + cpprId + '', null, null);\n    }\n\n    public addCRPR(tlId: number, crprId: number): Observable<any> {\n        return this.authenticate('get', this.getResourceUrl() + '/' + tlId + '/add/cronPeriod/' + crprId, null, null);\n    }\n\n    public removeCRPR(tlId: number, crprId: number): Observable<any> {\n        return this.authenticate('get', this.getResourceUrl() + '/' + tlId + '/remove/cronPeriod/' + crprId, null, null);\n    }\n\n    public addPeriod(tlId: number, periodId: number): Observable<any> {\n        return this.authenticate('get', this.getResourceUrl() + '/' + tlId + '/add/period/' + periodId, null, null);\n    }\n\n    public removePeriod(tlId: number, periodId: number): Observable<any> {\n        return this.authenticate('get', this.getResourceUrl() + '/' + tlId + '/remove/period/' + periodId, null, null);\n    }\n\n    protected getResourceUrl() {\n        return this.getRootResourceUrl() + '/timeline';\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/rest/resources/timeline/timeline.service.ts","export enum TimeUnit {\n  MINUTE = 1,\n  HOUR = 2,\n  DAY = 3 ,\n  WEEK = 4,\n  MONTH = 5,\n  YEAR = 6\n}\n\nexport namespace TimeUnitUtils {\n    export function toString(unit: TimeUnit) {\n        return TimeUnit[unit];\n    }\n\n    export function parse(unit: string):TimeUnit {\n        return TimeUnit[unit];\n    }\n\n    /*\n    export function parse(unit: number): TimeUnit{\n      switch(unit){\n        case 1: return TimeUnit.MINUTE;\n        case 2: return TimeUnit.HOUR;\n        case 3: return TimeUnit.DAY;\n        case 4: return TimeUnit.WEEK;\n        case 5: return TimeUnit.MONTH;\n        case 6: return TimeUnit.YEAR;\n      }\n      return null;\n    }\n    */\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/timegrid/timeunit.ts","module.exports = __webpack_public_path__ + \"fd829846fc6cb67a4d3b8ee524f74ce6.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/back.svg\n// module id = 222\n// module chunks = 0","module.exports = __webpack_public_path__ + \"3789f78639d9110088a431f75a5d8561.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/delete.svg\n// module id = 223\n// module chunks = 0","module.exports = (__webpack_require__(2))(470)\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/rxjs/add/operator/concat.js from dll-reference vendor_lib\n// module id = 224\n// module chunks = 0 1","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { CompiledPeriodService } from '../rest/resources/cppr/compiledperiod.service';\nimport { CompiledPeriod } from '../rest/resources/cppr/compiledperiod';\nimport { TimelineService } from '../rest/resources/timeline/timeline.service';\nimport { Timeline } from '../rest/resources/timeline/timeline';\n\n\n@Component({\n  selector: 'period',\n  template: require('./period.html'),\n  styles: [require('./period.scss')]\n})\nexport class PeriodComponent implements OnInit {\n\n  private sub: Subscription;\n  private id: number;\n  private period: CompiledPeriod = new CompiledPeriod();\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private cpprService: CompiledPeriodService,\n    private tlService: TimelineService) { }\n\n  public ngOnInit() {\n    this.sub = this.route\n      .queryParams\n      .subscribe(params => {\n        this.id = +params['id'] || null;\n        this.getPeriod(null);\n      });\n  }\n\n  public getPeriod(successCallback) {\n    if(this.id){\n      this.loadPeriod();\n    } else {\n      this.createPeriod(\"period-\" + new Date().getTime());\n    }\n  }\n\n  private savePeriod(){\n    if(this.id){\n      let thiz = this;\n      this.cpprService.update(this.period).subscribe(newOne => {\n        thiz.id = newOne.id;\n        thiz.period = newOne;\n      });\n    } else {\n      if(this.period.name && this.period.name.length > 0){\n          this.createPeriod(this.period.name);\n      }\n    }\n  }\n\n  private loadPeriod(){\n    let thiz = this;\n    this.cpprService.read(this.id).subscribe(period => {\n      thiz.period = period;\n    });\n  }\n\n  private createPeriod(name: string){\n    let thiz = this;\n    let newCppr = new CompiledPeriod();\n    newCppr.name = name;\n    this.cpprService.create(newCppr).subscribe(newOne => {\n      thiz.id = newOne.id;\n      thiz.period = newOne;\n    });\n  }\n\n  private createTimeline(){\n    let thiz = this;\n    let newTimeline = new Timeline();\n    newTimeline.name = \"Timeline-\" + new Date().getTime();\n    this.tlService.create(newTimeline).subscribe(newOne => {\n      thiz.goToTimeline(newOne.id);\n    });\n  }\n\n  public deletePeriod(){\n    let thiz = this;\n    return this.cpprService.delete(this.id)\n      .subscribe((period) => {\n        thiz.back();\n      },\n      (error) => {});\n  }\n\n  goToTimeline(timelineId: number){\n      this.router.navigate(['/periods/timeline-detail', timelineId]);\n  }\n\n  back(){\n    this.location.back();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/+periods/period.component.ts","import {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { CompiledPeriodService } from '../rest/resources/cppr/compiledperiod.service';\nimport { CompiledPeriod } from '../rest/resources/cppr/compiledperiod';\n\n@Component({\n  selector: 'periods',\n  template: require('./periods.html'),\n  styles: [require('./periods.scss')]\n})\nexport class PeriodsComponent implements OnInit {\n\n  public periods: CompiledPeriod[];\n\n  constructor(\n    private cpprService: CompiledPeriodService,\n    private router: Router,\n    private location: Location) { }\n\n  public ngOnInit() {\n    this.getPeriods(null);\n  }\n\n  public getPeriods(successCallback) {\n    let thiz = this;\n    return this.cpprService.getAll()\n      .subscribe((periods) => {\n        thiz.periods = periods;\n        if (successCallback) {\n          successCallback();\n        }\n      },\n      (error) => {});\n  }\n\n  public deletePeriod(id: number){\n    let thiz = this;\n    return this.cpprService.delete(id)\n      .subscribe((period) => {\n        thiz.getPeriods(null);\n      },\n      (error) => {});\n  }\n\n  goToPeriod(id) {\n    this.router.navigate(['/periods/details'], { queryParams: { id: id } });\n  }\n\n  back(){\n    this.location.back();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/+periods/periods.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { TimelineService } from '../rest/resources/timeline/timeline.service';\nimport { Timeline } from '../rest/resources/timeline/timeline';\n\n@Component({\n  selector: 'timeline',\n  template: require('./timeline.html'),\n  styles: [require('./timeline.scss')]\n})\nexport class TimelineComponent implements OnInit {\n\n  private id: number;\n  private timeline: Timeline = new Timeline();\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private tlService: TimelineService) { }\n\n  public ngOnInit() {\n    let thiz = this;\n    this.route.params.subscribe(params => {\n      thiz.id = +params['id'] || null;\n      thiz.getTimeline(null);\n    });\n  }\n\n  public getTimeline(successCallback) {\n    if(this.id){\n      this.loadTimeline();\n    }\n  }\n\n  private saveTimeline(){\n    if(this.id){\n      let thiz = this;\n      this.tlService.update(this.timeline).subscribe(newOne => {\n        thiz.id = newOne.id;\n        thiz.timeline = newOne;\n      });\n    } else {\n      if(this.timeline.name && this.timeline.name.length > 0){\n          this.createTimeline(this.timeline.name);\n      }\n    }\n  }\n\n  private loadTimeline(){\n    let thiz = this;\n    this.tlService.read(this.id).subscribe(Timeline => {\n      thiz.timeline = Timeline;\n    });\n  }\n\n  private createTimeline(name: string){\n    let thiz = this;\n    let newTl = new Timeline();\n    newTl.name = name;\n    this.tlService.create(newTl).subscribe(newOne => {\n      thiz.id = newOne.id;\n      thiz.timeline = newOne;\n    });\n  }\n\n  public deleteTimeline(){\n    let thiz = this;\n    return this.tlService.delete(this.id)\n      .subscribe((timeline) => {\n        thiz.back();\n      },\n      (error) => {});\n  }\n\n  back(){\n    this.location.back();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/+timeline/timeline.component.ts","export class Resource {\n  public id: number;\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/rest/resources/resource.ts","import { Resource } from '../resource';\n\nexport class Timeline extends Resource {\n  public name: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/rest/resources/timeline/timeline.ts","import { CommonModule } from '@angular/common';\nimport { HttpModule, JsonpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { routes } from './periods.routes';\nimport { PeriodsComponent } from './periods.component';\nimport { PeriodComponent } from './period.component';\nimport { TimelineComponent } from '../+timeline/timeline.component';\nimport { TimegridComponent } from '../timegrid/timegrid.component';\nimport { CompiledPeriodService } from 'app/rest/resources/cppr/compiledperiod.service';\nimport { TimelineService } from 'app/rest/resources/timeline/timeline.service';\n\n@NgModule({\n  declarations: [\n    // Components / Directives/ Pipes\n    PeriodsComponent,\n    PeriodComponent,\n    TimelineComponent,\n    TimegridComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpModule,\n    JsonpModule,\n    RouterModule.forChild(routes),\n  ],\n  providers: [CompiledPeriodService, TimelineService]\n})\nexport class PeriodsModule {\n  public static routes = routes;\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/+periods/periods.module.ts","import { PeriodsComponent } from './periods.component';\nimport { PeriodComponent } from './period.component';\nimport { TimelineComponent } from '../+timeline/timeline.component';\n\nexport const routes = [\n  { path: '', children: [\n    { path: '', component: PeriodsComponent },\n    { path: 'details', component: PeriodComponent },\n    { path: 'timeline-detail/:id', component: TimelineComponent }\n  ]},\n];\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/+periods/periods.routes.ts","import { Resource } from '../resource';\n\nexport class CompiledPeriod extends Resource {\n  public name: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/rest/resources/cppr/compiledperiod.ts","import {TimeUnit} from './timeunit';\n\nexport namespace DateUtils {\n\n  export function trunc(date: Date, unit: TimeUnit): Date{\n    let newDate: Date = new Date(date.getTime());\n    switch(unit){\n      case TimeUnit.YEAR: newDate.setMonth(0);\n      case TimeUnit.MONTH: newDate.setDate(1);\n      case TimeUnit.WEEK:\n      case TimeUnit.DAY: newDate.setHours(0);\n      case TimeUnit.HOUR: newDate.setMinutes(0);\n      case TimeUnit.MINUTE:\n      newDate.setSeconds(0);\n      newDate.setMilliseconds(0);\n    }\n    return newDate;\n  }\n\n  export function increment(date: Date, unit: TimeUnit): Date{\n    let newDate: Date = new Date(date.getTime());\n    switch(unit){\n      case TimeUnit.YEAR: newDate.setFullYear(date.getFullYear() + 1); break;\n      case TimeUnit.MONTH: newDate.setMonth(date.getMonth() + 1); break;\n      case TimeUnit.WEEK: newDate.setDate(date.getDate() + 8); break;\n      case TimeUnit.DAY: newDate.setDate(date.getDate() + 1); break;\n      case TimeUnit.HOUR: newDate.setHours(date.getHours() + 1);\n      case TimeUnit.MINUTE: newDate.setMinutes(date.getMinutes() + 1);\n    }\n    return newDate;\n  }\n\n  export function formatDate(date: Date, pattern: string): string{\n    let minPattern = pattern.replace(/mm/g, '' + on2Digits(date.getMinutes()));\n    let hrPattern = minPattern.replace(/hh/g, '' + on2Digits(date.getHours()));\n    let dyPattern = hrPattern.replace(/dd/g, '' + on2Digits(date.getDate()));\n    let wkPattern = dyPattern.replace(/ww/g, '' + on2Digits(date.getDate()));\n    let mtPattern = wkPattern.replace(/MM/g, '' + on2Digits(date.getMonth() + 1));\n    let fullYearPattern = mtPattern.replace(/yyyy/g, '' + date.getFullYear());\n    let yearPattern = fullYearPattern.replace(/yy/g, '' + truncFullYear(date));\n    return yearPattern;\n  }\n\n  function on2Digits(digit: number): string{\n    return digit < 10 ? '0' + digit : '' + digit;\n  }\n\n  function truncFullYear(date: Date): string{\n    let fullyear: string = '' + date.getFullYear();\n    return fullyear.substring(fullyear.length - 2, fullyear.length);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/timegrid/dateutils.ts","import {TimeUnit} from './timeunit';\nimport {Timerange} from './timerange';\nimport {DateUtils} from './dateutils';\n\n\nexport class GridBuilder {\n\n\n  private timegridColClass = 'timegrid-col';\n\n  private grid: HTMLElement = null;\n  private _unit: TimeUnit;\n  private _range: Timerange;\n  private _start: Date;\n  private _end: Date;\n  private _date: Date;\n  private _maxresolution: number;\n\n  constructor(targetId: string, unit: TimeUnit, range: Timerange, start: Date, end: Date, date: Date, maxresolution: number){\n    this.grid = document.getElementById(targetId);\n    this._unit = unit;\n    this._range = range;\n    this._start = start;\n    this._end = end;\n    this._date = date;\n    this._maxresolution = maxresolution;\n  }\n\n  public render(){\n      this.renderRowGrid(this.grid, this._unit);\n  }\n\n  private renderRowGrid(parent:HTMLElement, unit: TimeUnit){\n    this.emptyElement(parent);\n    let row = document.createElement('div');\n    parent.appendChild(row);\n\n    let rowsize = 0;\n    switch(unit){\n      case TimeUnit.MINUTE: rowsize = this._range.asMinutes; break;\n      case TimeUnit.HOUR: rowsize = this._range.asHours; break;\n      case TimeUnit.DAY: rowsize = this._range.asDays; break;\n      case TimeUnit.WEEK: rowsize = this._range.asWeeks; break;\n      case TimeUnit.MONTH: rowsize = this._range.asMonths; break;\n      case TimeUnit.YEAR: rowsize = this._range.asYears;\n    }\n    this.renderColumns(row, unit, rowsize, 0);\n  }\n\n  private renderColumns(target: HTMLElement, unit: TimeUnit, rowsize: number, level: number) {\n    let currentDate: Date = DateUtils.trunc(this._start, this._unit);\n    let classes = this.getClasses(unit);\n    let rowClass = classes[0];\n    let cellClass = classes[1];\n\n    let columns: HTMLElement[] = this.renderGridColumns(target, rowsize, currentDate, unit, level, cellClass);\n\n    let childUnit = this.child(unit);\n    if(childUnit){\n      for(let i=0; i<columns.length; i++){\n        let column: HTMLElement = columns[i];\n        let columnDate = new Date(parseInt(column.getAttribute('data-date')));\n        let childNumber = this.childElementsNumber(unit, columnDate);\n        let width = Math.trunc(column.offsetWidth / this._maxresolution);\n        if(width > childNumber){\n          let content: HTMLElement = <HTMLElement> column.querySelector('.timegrid-col-content');\n          let innerContent = document.createElement('div');\n          content.appendChild(innerContent);\n          this.renderColumns(innerContent, childUnit, childNumber, level + 1);\n        }\n      }\n    }\n\n    target.classList.add('timegrid-row');\n    target.classList.add('timegrid-row-' + level);\n    target.classList.add(rowClass);\n    target.classList.add(rowClass + '-' + level);\n  }\n\n  private renderGridColumns(target: HTMLElement, rowsize: number, currentDate: Date, unit: TimeUnit, level: number, colClass: string) : HTMLElement[]{\n    let columns: HTMLElement[] = [];\n    for(let i=0; i < rowsize; i++){\n      let column = document.createElement('div');\n      target.appendChild(column);\n      column.classList.add(colClass);\n      column.classList.add(colClass + '-' + level);\n      column.classList.add(this.timegridColClass);\n      column.classList.add(this.timegridColClass +'-' + level);\n      column.setAttribute('data-date', '' + currentDate.getTime());\n      column.setAttribute('data-date-formatted', '' + DateUtils.formatDate(currentDate, 'dd/MM/yyyy hh:mm'));\n      this.renderTimeGridColumn(column, currentDate, unit, level);\n      columns.push(column);\n      currentDate = DateUtils.increment(currentDate, unit);\n    }\n    return columns;\n  }\n\n  private renderTimeGridColumn(target:HTMLElement, date: Date, unit: TimeUnit, level: number){\n    let isReference = DateUtils.trunc(this._date, this._unit).getTime() === DateUtils.trunc(date, this._unit).getTime();\n    if(isReference){\n      target.classList.add('timegrid-col-reference');\n    }\n    let content = document.createElement('div');\n    content.classList.add('timegrid-col-content');\n    content.classList.add('timegrid-col-content-' + level);\n\n    content.setAttribute('data-date', '' + date.getTime());\n    content.setAttribute('data-date-formatted', '' + date);\n\n    let labelCell = document.createElement('div');\n    labelCell.classList.add('timegrid-col-label');\n    labelCell.classList.add('timegrid-col-label-' + level);\n\n    target.appendChild(content);\n    target.appendChild(labelCell);\n    this.printLabel(labelCell, date, unit, level);\n    return false;\n  }\n\n  private getClasses(unit:TimeUnit):string[] {\n    switch(unit){\n      case TimeUnit.MINUTE: return ['timegrid-row-minutes','timegrid-col-minute'];\n      case TimeUnit.HOUR: return ['timegrid-row-hours','timegrid-col-hour'];\n      case TimeUnit.DAY: return ['timegrid-row-days','timegrid-col-day'];\n      case TimeUnit.WEEK: return ['timegrid-row-weeks','timegrid-col-week'];\n      case TimeUnit.MONTH: return ['timegrid-row-months','timegrid-col-month'];\n      case TimeUnit.YEAR: return ['timegrid-row-years','timegrid-col-year'];\n    }\n    return ['',''];\n  }\n\n  private printLabel(labelCell: HTMLElement, date: Date, unit: TimeUnit, level: number){\n    switch(unit){\n      case TimeUnit.MINUTE:this.printLabelWithPatterns(labelCell, date, level, ['hh:mm', 'mm']); return;\n      case TimeUnit.HOUR: this.printLabelWithPatterns(labelCell, date, level, ['dd/MM hh:00', 'hh']); return;\n      case TimeUnit.DAY: this.printLabelWithPatterns(labelCell, date, level, ['dd/MM/yy', 'dd-MM']); return;\n      case TimeUnit.WEEK: this.printLabelWithPatterns(labelCell, date, level, ['dd/MM/yy', 'dd-MM']); return;\n      case TimeUnit.MONTH: this.printLabelWithPatterns(labelCell, date, level, ['MM-yyyy', 'MM']); return;\n      case TimeUnit.YEAR: this.printLabelWithPatterns(labelCell, date, level, ['yyyy']); return;\n    }\n  }\n\n  private printLabelWithPatterns(labelCell: HTMLElement, date: Date, level: number, patterns:string[]){\n    let startWidth = labelCell.offsetWidth;\n    if(level < patterns.length){\n      let formatted = DateUtils.formatDate(date, patterns[level]);\n      labelCell.innerHTML = formatted;\n    }\n  }\n\n  private childElementsNumber(unit: TimeUnit, date: Date){\n    switch(unit){\n      case TimeUnit.MINUTE: return 0;\n      case TimeUnit.HOUR: return 60;\n      case TimeUnit.DAY: return 24;\n      case TimeUnit.WEEK: return 7;\n      case TimeUnit.MONTH: return new Date(date.getFullYear(), date.getMonth(), 0).getDate();\n      case TimeUnit.YEAR: return 12;\n    }\n  }\n\n  private child(unit: TimeUnit): TimeUnit{\n    switch(unit){\n      case TimeUnit.HOUR: return TimeUnit.MINUTE;\n      case TimeUnit.DAY: return TimeUnit.HOUR;\n      case TimeUnit.WEEK: return TimeUnit.DAY;\n      case TimeUnit.MONTH: return TimeUnit.DAY;\n      case TimeUnit.YEAR: return TimeUnit.MONTH;\n    }\n    return null;\n  }\n\n  private emptyElement(element: HTMLElement){\n    if(element){\n      while (element.firstChild) {\n          element.removeChild(element.firstChild);\n      }\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/timegrid/gridbuilder.ts","import { Component, ViewEncapsulation, OnInit, AfterViewInit } from '@angular/core';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport {Timerange} from './timerange';\nimport {TimeUnit, TimeUnitUtils} from './timeunit';\nimport {GridBuilder} from './gridbuilder';\n\n@Component({\n  selector: 'timegrid',\n  template: require('./timegrid.html'),\n  styles: [require('./timegrid.scss')],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TimegridComponent implements OnInit, AfterViewInit {\n\n  public timeunits = TimeUnit;\n  public keys;\n  private _unit: TimeUnit = TimeUnit.DAY;\n  private _size: number = 1;\n  private _target: Date = new Date();\n  private _timerange: Timerange;\n  private _maxresolution = 1;\n  private _gridId: string;\n\n  public ngOnInit() {\n      this.keys = Object.keys(this.timeunits).filter(f => !isNaN(Number(f)));\n      this._gridId = \"timegrid-\" + Math.random();\n      this.compute();\n  }\n\n  public ngAfterViewInit() {\n      this.render();\n  }\n\n  get gridId(){\n    return this._gridId;\n  }\n\n  get unit() {\n    return this._unit;\n  }\n\n  set unit(unit: any){\n    let previousTimeUnit = this._unit;\n    this._unit = parseInt(unit);\n    this.compute();\n    if(!this.isViewValid()){\n      this._unit = previousTimeUnit;\n      this.compute();\n      let unitSelection = <HTMLSelectElement> document.getElementById(this._gridId + '-unit');\n      let oldSelectedOption = <HTMLOptionElement> unitSelection.querySelector('option[value=\"' + this._unit + '\"]');\n      unitSelection.selectedIndex = oldSelectedOption.index;\n    }\n    this.render();\n  }\n\n  set size(size: number){\n    let previousSize = this._size;\n    this._size = size;\n    this.compute();\n    if(!this.isViewValid()){\n      this._size = previousSize;\n      this.compute();\n      let sizeInput = <HTMLInputElement> document.getElementById(this._gridId + '-size');\n      sizeInput.value = '' + this._size;\n    }\n    this.render();\n  }\n\n  set date(date: Date){\n    let previousDate = this._target;\n    this._target = date;\n    this.compute();\n    if(!this.isViewValid()){\n      this._target = previousDate;\n      this.compute();\n    }\n    this.render();\n  }\n\n  get size(){\n    return this._size;\n  }\n\n  get date(){\n    return this._target;\n  }\n\n  get startDate(): Date {\n    return this.dateRange(true);\n  }\n\n  get endDate(): Date {\n    return this.dateRange(false);\n  }\n\n  get timerange(): Timerange {\n    return this._timerange;\n  }\n\n  public onResize(event){\n    this.compute();\n    while(!this.isViewValid()){\n      this._size--;\n      this.compute();\n    }\n    this.render();\n    //Just to be aware of window resize event in order to bind offsetWidth with dom\n  }\n\n  get offsetwidth(): number {\n    return document.getElementById(this._gridId).offsetWidth;\n  }\n\n  get maxrowsize(){\n    return Math.trunc(this.offsetwidth / this._maxresolution);\n  }\n\n  get rowsize(){\n    return Math.trunc(this.offsetwidth / this._maxresolution);\n  }\n\n  get lowerTimeUnit(): TimeUnit{\n    let maxrowsize = this.maxrowsize;\n    if(maxrowsize >= this._timerange.asMinutes) return TimeUnit.MINUTE;\n    if(maxrowsize >= this._timerange.asHours) return TimeUnit.HOUR;\n    if(maxrowsize >= this._timerange.asDays) return TimeUnit.DAY;\n    if(maxrowsize >= this._timerange.asWeeks) return TimeUnit.WEEK;\n    if(maxrowsize >= this._timerange.asMonths) return TimeUnit.MONTH;\n    return TimeUnit.YEAR;\n  }\n\n  get timeUnitNumber(){\n    switch(this._unit){\n      case TimeUnit.MINUTE:\n      return this._timerange.asMinutes;\n      case TimeUnit.HOUR:\n      return this._timerange.asHours;\n      case TimeUnit.DAY:\n      return this._timerange.asDays;\n      case TimeUnit.WEEK:\n      return this._timerange.asWeeks;\n      case TimeUnit.MONTH:\n      return this._timerange.asMonths;\n      case TimeUnit.YEAR:\n      return this._timerange.asYears;\n    }\n    return 0\n  }\n\n  private isViewValid(): boolean{\n    return this.timeUnitNumber <= this.maxrowsize;\n  }\n  private computeAndRender(){\n    this.compute();\n    this.render();\n  }\n\n  private compute(){\n    this._timerange = this.computeTimerange();\n  }\n\n  private render(){\n    let builder = new GridBuilder(this._gridId, this._unit, this._timerange, this.startDate, this.endDate, this._target, this._maxresolution);\n    builder.render();\n  }\n\n  private computeTimerange(): Timerange {\n    let timerange = new Timerange();\n    let startDate = this.startDate;\n    let endDate = this.endDate;\n    let rangeAsMillis: number = endDate.getTime() - startDate.getTime();\n    let rangeAsMonth: number = (endDate.getFullYear() - startDate.getFullYear()) * 12 + (endDate.getMonth() - startDate.getMonth()) + 1;\n    let rangeAsYear: number = endDate.getFullYear() - startDate.getFullYear() + 1;\n\n    timerange.asMinutes = Math.trunc((rangeAsMillis / (60 * 1000))) + (rangeAsMillis % (60 * 1000) > 0 ? 1 : 0);\n    timerange.asHours = Math.trunc((rangeAsMillis / (60 * 60 * 1000))) + (rangeAsMillis % (60 * 60 * 1000) > 0 ? 1 : 0);\n    timerange.asDays = Math.trunc((rangeAsMillis / (24 * 60 * 60 * 1000))) + (rangeAsMillis % (24 * 60 * 60 * 1000) > 0 ? 1 : 0);\n    timerange.asWeeks = Math.trunc((timerange.asDays / 7)) + (timerange.asDays % 7 > 0 ? 1 : 0);\n    timerange.asMonths = rangeAsMonth;\n    timerange.asYears = rangeAsYear;\n    return timerange;\n  }\n\n  private dateRange(before: boolean): Date {\n    let rangeDateBorder = new Date(this._target.getTime());\n    let rangeBorder = this.afterRange();\n    if(before){\n      rangeBorder = this.beforeRange() * -1;\n    }\n    switch(this._unit){\n      case TimeUnit.MINUTE:\n      rangeDateBorder.setMinutes(rangeDateBorder.getMinutes() + rangeBorder);\n      break;\n      case TimeUnit.HOUR:\n      rangeDateBorder.setHours(rangeDateBorder.getHours() + rangeBorder);\n      break;\n      case TimeUnit.DAY:\n      rangeDateBorder.setDate(rangeDateBorder.getDate() + rangeBorder);\n      break;\n      case TimeUnit.WEEK:\n      rangeDateBorder.setDate(rangeDateBorder.getDate() + (7 * rangeBorder));\n      break;\n      case TimeUnit.MONTH:\n      rangeDateBorder.setMonth(rangeDateBorder.getMonth() + rangeBorder);\n      break;\n      case TimeUnit.YEAR:\n      rangeDateBorder.setFullYear(rangeDateBorder.getFullYear() + rangeBorder);\n      break;\n    }\n    return rangeDateBorder;\n  }\n\n  private beforeRange(): number{\n    return Math.trunc(this._size / 2);\n  }\n\n  private afterRange(): number{\n    let overlay = this._size % 2;\n    return Math.trunc(this._size / 2) + overlay;\n  }\n}\n\nexport enum ALIGN {\n  LEFT,\n  RIGHT,\n  CENTER\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/timegrid/timegrid.component.ts","export class Timerange {\n  public asMinutes: number;\n  public asHours: number;\n  public asDays: number;\n  public asWeeks: number;\n  public asMonths: number;\n  public asYears: number;\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/timegrid/timerange.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"#period {\\n  height: 100%;\\n  overflow-y: auto;\\n  display: flex;\\n  flex-direction: column; }\\n\\n#detail {\\n  flex-grow: 1;\\n  display: flex;\\n  flex-direction: column;\\n  overflow-y: auto;\\n  border-width: 0px 0px 2px 0px;\\n  border-radius: 4px;\\n  border-color: #eee; }\\n\\n#actions {\\n  flex-basis: 40px;\\n  display: flex;\\n  flex-direction: column; }\\n\\n.list-row {\\n  display: flex;\\n  flex-direction: row; }\\n\\n.list-cell {\\n  line-height: 40px;\\n  padding: 1px; }\\n\\n.list-cell button {\\n  height: 40px;\\n  width: 40px;\\n  cursor: pointer;\\n  border-width: 1px;\\n  border-radius: 4px;\\n  border-color: #eee; }\\n\\n.list-cell button:hover {\\n  background-color: #eee; }\\n\\n.delete-button {\\n  background: url(\" + require(\"../../assets/img/delete.svg\") + \") center 0px no-repeat; }\\n\\n.back-button {\\n  background: url(\" + require(\"../../assets/img/back.svg\") + \") center 0px no-repeat; }\\n\\n.add-button {\\n  background: url(\" + require(\"../../assets/img/add-timeline.svg\") + \") center 0px no-repeat; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/sass-loader/lib/loader.js!./src/app/+periods/period.scss\n// module id = 241\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"#periods {\\n  height: 100%;\\n  overflow-y: auto;\\n  display: flex;\\n  flex-direction: column; }\\n\\n#list {\\n  flex-grow: 1;\\n  display: flex;\\n  flex-direction: column;\\n  overflow-y: auto;\\n  border-width: 0px 0px 2px 0px;\\n  border-radius: 4px;\\n  border-color: #eee; }\\n\\n#actions {\\n  flex-basis: 40px;\\n  display: flex;\\n  flex-direction: column; }\\n\\n.list-row {\\n  display: flex;\\n  flex-direction: row; }\\n\\n.list-cell {\\n  line-height: 40px;\\n  padding: 1px; }\\n\\n.list-cell button {\\n  height: 40px;\\n  width: 40px;\\n  cursor: pointer;\\n  border-width: 1px;\\n  border-radius: 4px;\\n  border-color: #eee; }\\n\\n.list-cell button:hover {\\n  background-color: #eee; }\\n\\n.edit-button {\\n  background: url(\" + require(\"../../assets/img/pen.svg\") + \") center 0px no-repeat; }\\n\\n.delete-button {\\n  background: url(\" + require(\"../../assets/img/delete.svg\") + \") center 0px no-repeat; }\\n\\n.add-button {\\n  background: url(\" + require(\"../../assets/img/add.svg\") + \") center 0px no-repeat; }\\n\\n.back-button {\\n  background: url(\" + require(\"../../assets/img/back.svg\") + \") center 0px no-repeat; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/sass-loader/lib/loader.js!./src/app/+periods/periods.scss\n// module id = 242\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"#timeline {\\n  height: 100%;\\n  overflow-y: auto;\\n  display: flex;\\n  flex-direction: column; }\\n\\n#detail {\\n  flex-grow: 1;\\n  display: flex;\\n  flex-direction: column;\\n  overflow-y: auto;\\n  border-width: 0px 0px 2px 0px;\\n  border-radius: 4px;\\n  border-color: #eee; }\\n\\n#actions {\\n  flex-basis: 40px;\\n  display: flex;\\n  flex-direction: column; }\\n\\n.list-row {\\n  display: flex;\\n  flex-direction: row; }\\n\\n.timeline-timegrid-row {\\n  flex-grow: 1;\\n  display: flex;\\n  flex-direction: column; }\\n\\n.timeline-timegrid-row > div.list-cell {\\n  flex-grow: 1;\\n  display: flex; }\\n\\n.timeline-timegrid-row > div.list-cell > timegrid {\\n  flex-grow: 1; }\\n\\n.list-cell {\\n  line-height: 40px;\\n  padding: 1px; }\\n\\n.list-cell button {\\n  height: 40px;\\n  width: 40px;\\n  cursor: pointer;\\n  border-width: 1px;\\n  border-radius: 4px;\\n  border-color: #eee; }\\n\\n.list-cell button:hover {\\n  background-color: #eee; }\\n\\n.delete-button {\\n  background: url(\" + require(\"../../assets/img/delete.svg\") + \") center 0px no-repeat; }\\n\\n.back-button {\\n  background: url(\" + require(\"../../assets/img/back.svg\") + \") center 0px no-repeat; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/sass-loader/lib/loader.js!./src/app/+timeline/timeline.scss\n// module id = 243\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".timegrid-component {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%; }\\n\\n.timegrid {\\n  flex-grow: 1;\\n  display: flex;\\n  flex-direction: column;\\n  background-color: #eee;\\n  padding: 2px;\\n  border-radius: 5px; }\\n\\n.timegrid-tools {\\n  flex-basis: 50px; }\\n\\n.timegrid-row {\\n  flex-grow: 1;\\n  display: flex;\\n  flex-direction: row; }\\n\\n.timegrid-col {\\n  flex-grow: 1;\\n  flex-basis: 1;\\n  overflow: hidden;\\n  display: flex;\\n  flex-direction: column; }\\n\\n.timegrid-col-0 {\\n  border-right-width: 1px;\\n  border-right-color: #aaa;\\n  border-right-style: solid; }\\n\\n.timegrid-col-1 {\\n  border-right-width: 1px;\\n  border-right-color: #bbb;\\n  border-right-style: dotted; }\\n\\n.timegrid-col-2 {\\n  border-right-width: 1px;\\n  border-right-color: #ccc;\\n  border-right-style: dashed; }\\n\\n.timegrid-col-reference {\\n  background-color: #eee; }\\n\\n.timegrid-col:first-child {\\n  border-top-left-radius: 2px;\\n  border-bottom-left-radius: 2px; }\\n\\n.timegrid-col:last-child {\\n  border-top-right-radius: 2px;\\n  border-bottom-right-radius: 2px;\\n  border-right-width: 0px; }\\n\\n.timegrid-col-content {\\n  flex-grow: 1;\\n  display: flex;\\n  flex-direction: row; }\\n\\n.timegrid-col-label {\\n  text-align: center;\\n  line-height: normal;\\n  color: #455;\\n  font-size: 0.8em; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/sass-loader/lib/loader.js!./src/app/timegrid/timegrid.scss\n// module id = 244\n// module chunks = 0","module.exports = __webpack_public_path__ + \"e722a160a7cdb01fd1851d418c7b37c5.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/add-timeline.svg\n// module id = 246\n// module chunks = 0","module.exports = __webpack_public_path__ + \"86f23ebbf59799ffc24f4ab60afbaec8.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/add.svg\n// module id = 247\n// module chunks = 0","module.exports = __webpack_public_path__ + \"6fa20b5935fef4c03f7938ed426839fc.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/pen.svg\n// module id = 248\n// module chunks = 0","module.exports = \"<div id=\\\"period\\\">\\n    <div id=\\\"detail\\\">\\n      <div class=\\\"list-row\\\">\\n        <div class=\\\"list-cell\\\">\\n          {{id}}\\n        </div>\\n        <div class=\\\"list-cell\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n            id=\\\"name\\\" required\\n            [(ngModel)]=\\\"period.name\\\"\\n            name=\\\"name\\\"\\n            (change)=\\\"savePeriod()\\\"/>\\n        </div>\\n      </div>\\n    </div>\\n    <div id=\\\"actions\\\">\\n      <div class=\\\"list-row\\\">\\n        <div class=\\\"list-cell\\\">\\n          <button type=\\\"button\\\" class=\\\"back-button\\\" (click)=\\\"back()\\\"></button>\\n        </div>\\n        <div class=\\\"list-cell\\\">\\n          <button type=\\\"button\\\" class=\\\"delete-button\\\" (click)=\\\"deletePeriod()\\\"></button>\\n        </div>\\n        <div class=\\\"list-cell\\\">\\n          <button type=\\\"button\\\" class=\\\"add-button\\\" (click)=\\\"createTimeline()\\\"></button>\\n        </div>\\n      </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/+periods/period.html\n// module id = 249\n// module chunks = 0","module.exports = \"<div id=\\\"periods\\\">\\n    <div id=\\\"list\\\">\\n      <div class=\\\"list-row periods\\\" *ngFor=\\\"let period of periods\\\">\\n        <div class=\\\"list-cell\\\">\\n          <button type=\\\"button\\\" class=\\\"edit-button\\\" [routerLink]=\\\"['details']\\\" [queryParams]=\\\"{ id: period.id }\\\"></button>\\n        </div>\\n        <div class=\\\"list-cell\\\">\\n          <button type=\\\"button\\\" class=\\\"delete-button\\\" (click)=\\\"deletePeriod(period.id)\\\"></button>\\n        </div>\\n        <div class=\\\"list-cell\\\">{{period.name}}</div>\\n      </div>\\n    </div>\\n    <div id=\\\"actions\\\">\\n      <div class=\\\"list-row\\\">\\n        <div class=\\\"list-cell\\\">\\n          <button type=\\\"button\\\" class=\\\"back-button\\\" (click)=\\\"back()\\\"></button>\\n        </div>\\n        <div class=\\\"list-cell\\\">\\n          <button type=\\\"button\\\" class=\\\"add-button\\\" [routerLink]=\\\"['details']\\\" [queryParams]=\\\"{ id: null }\\\"></button>\\n        </div>\\n      </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/+periods/periods.html\n// module id = 250\n// module chunks = 0","module.exports = \"<div id=\\\"timeline\\\">\\n    <div id=\\\"detail\\\">\\n      <div class=\\\"list-row\\\">\\n        <div class=\\\"list-cell\\\">\\n          {{id}}\\n        </div>\\n        <div class=\\\"list-cell\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\"\\n            id=\\\"name\\\" required\\n            [(ngModel)]=\\\"timeline.name\\\"\\n            name=\\\"name\\\"\\n            (change)=\\\"saveTimeline()\\\"/>\\n        </div>\\n      </div>\\n      <div class=\\\"list-row\\\" class=\\\"timeline-timegrid-row\\\">\\n        <div class=\\\"list-cell\\\">\\n          <timegrid></timegrid>\\n        </div>\\n      </div>\\n    </div>\\n    <div id=\\\"actions\\\">\\n      <div class=\\\"list-row\\\">\\n        <div class=\\\"list-cell\\\">\\n          <button type=\\\"button\\\" class=\\\"back-button\\\" (click)=\\\"back()\\\"></button>\\n        </div>\\n        <div class=\\\"list-cell\\\">\\n          <button type=\\\"button\\\" class=\\\"delete-button\\\" (click)=\\\"deleteTimeline()\\\"></button>\\n        </div>\\n      </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/+timeline/timeline.html\n// module id = 251\n// module chunks = 0","module.exports = \"<div class=\\\"timegrid-component\\\" (window:resize)=\\\"onResize($event)\\\">\\n  <div id=\\\"{{gridId}}\\\" class=\\\"timegrid\\\">\\n\\n  </div>\\n  <div class=\\\"timegrid-tools\\\">\\n    <input id=\\\"{{gridId}}-size\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n      id=\\\"size\\\" required\\n      [(ngModel)]=\\\"size\\\"\\n      name=\\\"name\\\"/>\\n      <select id=\\\"{{gridId}}-unit\\\" [(ngModel)]=\\\"unit\\\">\\n        <option *ngFor=\\\"let key of keys\\\" [value]=\\\"key\\\">{{timeunits[key]}}</option>\\n      </select>`\\n  </div>\\n  <!--\\n  <br>\\n  start: {{startDate}} ///// date: {{date}}\\n  <br>\\n  end: {{endDate}}\\n  <br>\\n  minutes: {{timerange.asMinutes}} == hours: {{timerange.asHours}} == days: {{timerange.asDays}}== weeks: {{timerange.asWeeks}} == months: {{timerange.asMonths}} == years: {{timerange.asYears}}\\n  <br>\\n  offsetwidth: {{offsetwidth}} // maxrowsize: {{maxrowsize}} // lowerTimeUnit: {{timeunits[lowerTimeUnit]}}\\n  -->\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/timegrid/timegrid.html\n// module id = 253\n// module chunks = 0","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./period.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/+periods/period.scss\n// module id = 254\n// module chunks = 0","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./periods.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/+periods/periods.scss\n// module id = 255\n// module chunks = 0","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./timeline.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/+timeline/timeline.scss\n// module id = 256\n// module chunks = 0","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./timegrid.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/timegrid/timegrid.scss\n// module id = 257\n// module chunks = 0"],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAOA;AAAA;AAAA;AALA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAGA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAjGA;AADA;AAQA;AAPA;AAAA;;;;;;;;;;;;;;ACXA;AAEA;AAIA;AAAA;AAAA;;AAUA;AARA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAVA;AADA;AACA;AAAA;;;;;;;;;;;;;;ACNA;AAEA;AAIA;AAAA;AAAA;;AA8BA;AA5BA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AA9BA;AADA;AACA;AAAA;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;AAYA;AACA;;;;;;;;AC/BA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AAKA;AACA;AACA;AACA;AAQA;AAMA;AACA;AACA;AACA;AACA;AACA;AAPA;AAOA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAtFA;AALA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AAXA;AAAA;;;;;;;;;;;;;;;;AClBA;AAIA;AACA;AAEA;AAQA;AAIA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAzCA;AALA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAPA;AAAA;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AAKA;AACA;AAOA;AAKA;AACA;AACA;AACA;AACA;AANA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AApEA;AALA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AATA;AAAA;;;;;;;;;ACfA;AAAA;AAAA;AAEA;AAAA;AAAA;;;;;;;;;;;;;;ACFA;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAmBA;AAAA;AAEA;AAAA;AAAA;AADA;AADA;AAjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACVA;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;;;;ACJA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AAEA;AAGA;AAaA;AAVA;AAEA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;;;;;;;;ACpLA;AAIA;AACA;AACA;AAQA;AANA;AAQA;AAEA;AACA;AACA;AAEA;AAwMA;AArMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;;;AAAA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAdA;AAgBA;AAwBA;AACA;AACA;AA1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AAEA;AAeA;AACA;AACA;AAjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AAUA;AAAA;AACA;AACA;;;AAAA;AAEA;AAAA;AACA;AACA;;;AAAA;AAEA;AAAA;AACA;AACA;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;;;AAAA;AAEA;AAAA;AACA;AACA;;;AAAA;AAEA;AAAA;AACA;AACA;;;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;;;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAhNA;AANA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAkNA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;ACpOA;AAAA;AAAA;AAOA;AAAA;AAAA;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}